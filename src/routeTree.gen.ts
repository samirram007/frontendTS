/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticatedDashboardImport } from './routes/_authenticated/dashboard'
import { Route as AuthenticatedChartsImport } from './routes/_authenticated/charts'
import { Route as authSignInImport } from './routes/(auth)/sign-in'
import { Route as authOtpImport } from './routes/(auth)/otp'
import { Route as auth500Import } from './routes/(auth)/500'
import { Route as AuthenticatedSettingsRouteImport } from './routes/_authenticated/settings/route'
import { Route as AuthenticatedUsersIndexImport } from './routes/_authenticated/users/index'
import { Route as AuthenticatedTasksIndexImport } from './routes/_authenticated/tasks/index'
import { Route as AuthenticatedSettingsIndexImport } from './routes/_authenticated/settings/index'
import { Route as AuthenticatedHelpCenterIndexImport } from './routes/_authenticated/help-center/index'
import { Route as AuthenticatedChatsIndexImport } from './routes/_authenticated/chats/index'
import { Route as AuthenticatedAppsIndexImport } from './routes/_authenticated/apps/index'
import { Route as AuthenticatedSettingsNotificationsImport } from './routes/_authenticated/settings/notifications'
import { Route as AuthenticatedSettingsDisplayImport } from './routes/_authenticated/settings/display'
import { Route as AuthenticatedSettingsAppearanceImport } from './routes/_authenticated/settings/appearance'
import { Route as AuthenticatedSettingsAccountImport } from './routes/_authenticated/settings/account'
import { Route as AuthenticatedauthProfileImport } from './routes/_authenticated/(auth)/profile'
import { Route as demoDemoTanstackQueryImport } from './routes/(demo)/demo.tanstack-query'
import { Route as demoDemoTableImport } from './routes/(demo)/demo.table'
import { Route as AuthenticatedMastersInventoryRouteImport } from './routes/_authenticated/masters/inventory/route'
import { Route as AuthenticatedMastersAccountsRouteImport } from './routes/_authenticated/masters/accounts/route'
import { Route as AuthenticatedTransactionsVouchersIndexImport } from './routes/_authenticated/transactions/vouchers/index'
import { Route as AuthenticatedTransactionsDaybookIndexImport } from './routes/_authenticated/transactions/day_book/index'
import { Route as AuthenticatedReportsStocksummaryIndexImport } from './routes/_authenticated/reports/stock_summary/index'
import { Route as AuthenticatedReportsProfitlossIndexImport } from './routes/_authenticated/reports/profit_loss/index'
import { Route as AuthenticatedReportsBalancesheetIndexImport } from './routes/_authenticated/reports/balance_sheet/index'
import { Route as AuthenticatedMastersAccountsCompanyImport } from './routes/_authenticated/masters/accounts/company'
import { Route as AuthenticatedMastersInventoryUnitIndexImport } from './routes/_authenticated/masters/inventory/unit/index'
import { Route as AuthenticatedMastersInventoryUniquequantitycodeIndexImport } from './routes/_authenticated/masters/inventory/unique_quantity_code/index'
import { Route as AuthenticatedMastersInventoryStockunitIndexImport } from './routes/_authenticated/masters/inventory/stock_unit/index'
import { Route as AuthenticatedMastersInventoryStockitemIndexImport } from './routes/_authenticated/masters/inventory/stock_item/index'
import { Route as AuthenticatedMastersInventoryStockgroupIndexImport } from './routes/_authenticated/masters/inventory/stock_group/index'
import { Route as AuthenticatedMastersInventoryStockcategoryIndexImport } from './routes/_authenticated/masters/inventory/stock_category/index'
import { Route as AuthenticatedMastersInventoryGodownIndexImport } from './routes/_authenticated/masters/inventory/godown/index'
import { Route as AuthenticatedMastersAccountsVouchertypeIndexImport } from './routes/_authenticated/masters/accounts/voucher_type/index'
import { Route as AuthenticatedMastersAccountsVoucherclassificationIndexImport } from './routes/_authenticated/masters/accounts/voucher_classification/index'
import { Route as AuthenticatedMastersAccountsVouchercategoryIndexImport } from './routes/_authenticated/masters/accounts/voucher_category/index'
import { Route as AuthenticatedMastersAccountsAccountnatureIndexImport } from './routes/_authenticated/masters/accounts/account_nature/index'
import { Route as AuthenticatedMastersAccountsAccountledgerIndexImport } from './routes/_authenticated/masters/accounts/account_ledger/index'
import { Route as AuthenticatedMastersAccountsAccountgroupIndexImport } from './routes/_authenticated/masters/accounts/account_group/index'

// Create Virtual Routes

const errors503LazyImport = createFileRoute('/(errors)/503')()
const errors500LazyImport = createFileRoute('/(errors)/500')()
const errors404LazyImport = createFileRoute('/(errors)/404')()
const errors403LazyImport = createFileRoute('/(errors)/403')()
const errors401LazyImport = createFileRoute('/(errors)/401')()
const authSigninLazyImport = createFileRoute('/(auth)/signin')()
const authSignUpLazyImport = createFileRoute('/(auth)/sign-up')()
const authSignIn2LazyImport = createFileRoute('/(auth)/sign-in-2')()
const authForgotPasswordLazyImport = createFileRoute(
  '/(auth)/forgot-password',
)()

// Create/Update Routes

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const errors503LazyRoute = errors503LazyImport
  .update({
    id: '/(errors)/503',
    path: '/503',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/503.lazy').then((d) => d.Route))

const errors500LazyRoute = errors500LazyImport
  .update({
    id: '/(errors)/500',
    path: '/500',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/500.lazy').then((d) => d.Route))

const errors404LazyRoute = errors404LazyImport
  .update({
    id: '/(errors)/404',
    path: '/404',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/404.lazy').then((d) => d.Route))

const errors403LazyRoute = errors403LazyImport
  .update({
    id: '/(errors)/403',
    path: '/403',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/403.lazy').then((d) => d.Route))

const errors401LazyRoute = errors401LazyImport
  .update({
    id: '/(errors)/401',
    path: '/401',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/401.lazy').then((d) => d.Route))

const authSigninLazyRoute = authSigninLazyImport
  .update({
    id: '/(auth)/signin',
    path: '/signin',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/signin.lazy').then((d) => d.Route))

const authSignUpLazyRoute = authSignUpLazyImport
  .update({
    id: '/(auth)/sign-up',
    path: '/sign-up',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/sign-up.lazy').then((d) => d.Route))

const authSignIn2LazyRoute = authSignIn2LazyImport
  .update({
    id: '/(auth)/sign-in-2',
    path: '/sign-in-2',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/sign-in-2.lazy').then((d) => d.Route))

const authForgotPasswordLazyRoute = authForgotPasswordLazyImport
  .update({
    id: '/(auth)/forgot-password',
    path: '/forgot-password',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() =>
    import('./routes/(auth)/forgot-password.lazy').then((d) => d.Route),
  )

const AuthenticatedDashboardRoute = AuthenticatedDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedChartsRoute = AuthenticatedChartsImport.update({
  id: '/charts',
  path: '/charts',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const authSignInRoute = authSignInImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const authOtpRoute = authOtpImport.update({
  id: '/(auth)/otp',
  path: '/otp',
  getParentRoute: () => rootRoute,
} as any)

const auth500Route = auth500Import.update({
  id: '/(auth)/500',
  path: '/500',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedSettingsRouteRoute = AuthenticatedSettingsRouteImport.update(
  {
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
)

const AuthenticatedUsersIndexRoute = AuthenticatedUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedTasksIndexRoute = AuthenticatedTasksIndexImport.update({
  id: '/tasks/',
  path: '/tasks/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedSettingsIndexRoute = AuthenticatedSettingsIndexImport.update(
  {
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any,
)

const AuthenticatedHelpCenterIndexRoute =
  AuthenticatedHelpCenterIndexImport.update({
    id: '/help-center/',
    path: '/help-center/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedChatsIndexRoute = AuthenticatedChatsIndexImport.update({
  id: '/chats/',
  path: '/chats/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedAppsIndexRoute = AuthenticatedAppsIndexImport.update({
  id: '/apps/',
  path: '/apps/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedSettingsNotificationsRoute =
  AuthenticatedSettingsNotificationsImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)

const AuthenticatedSettingsDisplayRoute =
  AuthenticatedSettingsDisplayImport.update({
    id: '/display',
    path: '/display',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)

const AuthenticatedSettingsAppearanceRoute =
  AuthenticatedSettingsAppearanceImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)

const AuthenticatedSettingsAccountRoute =
  AuthenticatedSettingsAccountImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)

const AuthenticatedauthProfileRoute = AuthenticatedauthProfileImport.update({
  id: '/(auth)/profile',
  path: '/profile',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const demoDemoTanstackQueryRoute = demoDemoTanstackQueryImport.update({
  id: '/(demo)/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRoute,
} as any)

const demoDemoTableRoute = demoDemoTableImport.update({
  id: '/(demo)/demo/table',
  path: '/demo/table',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedMastersInventoryRouteRoute =
  AuthenticatedMastersInventoryRouteImport.update({
    id: '/masters/inventory',
    path: '/masters/inventory',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedMastersAccountsRouteRoute =
  AuthenticatedMastersAccountsRouteImport.update({
    id: '/masters/accounts',
    path: '/masters/accounts',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedTransactionsVouchersIndexRoute =
  AuthenticatedTransactionsVouchersIndexImport.update({
    id: '/transactions/vouchers/',
    path: '/transactions/vouchers/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedTransactionsDaybookIndexRoute =
  AuthenticatedTransactionsDaybookIndexImport.update({
    id: '/transactions/day_book/',
    path: '/transactions/day_book/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedReportsStocksummaryIndexRoute =
  AuthenticatedReportsStocksummaryIndexImport.update({
    id: '/reports/stock_summary/',
    path: '/reports/stock_summary/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedReportsProfitlossIndexRoute =
  AuthenticatedReportsProfitlossIndexImport.update({
    id: '/reports/profit_loss/',
    path: '/reports/profit_loss/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedReportsBalancesheetIndexRoute =
  AuthenticatedReportsBalancesheetIndexImport.update({
    id: '/reports/balance_sheet/',
    path: '/reports/balance_sheet/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedMastersAccountsCompanyRoute =
  AuthenticatedMastersAccountsCompanyImport.update({
    id: '/company',
    path: '/company',
    getParentRoute: () => AuthenticatedMastersAccountsRouteRoute,
  } as any)

const AuthenticatedMastersInventoryUnitIndexRoute =
  AuthenticatedMastersInventoryUnitIndexImport.update({
    id: '/unit/',
    path: '/unit/',
    getParentRoute: () => AuthenticatedMastersInventoryRouteRoute,
  } as any)

const AuthenticatedMastersInventoryUniquequantitycodeIndexRoute =
  AuthenticatedMastersInventoryUniquequantitycodeIndexImport.update({
    id: '/unique_quantity_code/',
    path: '/unique_quantity_code/',
    getParentRoute: () => AuthenticatedMastersInventoryRouteRoute,
  } as any)

const AuthenticatedMastersInventoryStockunitIndexRoute =
  AuthenticatedMastersInventoryStockunitIndexImport.update({
    id: '/stock_unit/',
    path: '/stock_unit/',
    getParentRoute: () => AuthenticatedMastersInventoryRouteRoute,
  } as any)

const AuthenticatedMastersInventoryStockitemIndexRoute =
  AuthenticatedMastersInventoryStockitemIndexImport.update({
    id: '/stock_item/',
    path: '/stock_item/',
    getParentRoute: () => AuthenticatedMastersInventoryRouteRoute,
  } as any)

const AuthenticatedMastersInventoryStockgroupIndexRoute =
  AuthenticatedMastersInventoryStockgroupIndexImport.update({
    id: '/stock_group/',
    path: '/stock_group/',
    getParentRoute: () => AuthenticatedMastersInventoryRouteRoute,
  } as any)

const AuthenticatedMastersInventoryStockcategoryIndexRoute =
  AuthenticatedMastersInventoryStockcategoryIndexImport.update({
    id: '/stock_category/',
    path: '/stock_category/',
    getParentRoute: () => AuthenticatedMastersInventoryRouteRoute,
  } as any)

const AuthenticatedMastersInventoryGodownIndexRoute =
  AuthenticatedMastersInventoryGodownIndexImport.update({
    id: '/godown/',
    path: '/godown/',
    getParentRoute: () => AuthenticatedMastersInventoryRouteRoute,
  } as any)

const AuthenticatedMastersAccountsVouchertypeIndexRoute =
  AuthenticatedMastersAccountsVouchertypeIndexImport.update({
    id: '/voucher_type/',
    path: '/voucher_type/',
    getParentRoute: () => AuthenticatedMastersAccountsRouteRoute,
  } as any)

const AuthenticatedMastersAccountsVoucherclassificationIndexRoute =
  AuthenticatedMastersAccountsVoucherclassificationIndexImport.update({
    id: '/voucher_classification/',
    path: '/voucher_classification/',
    getParentRoute: () => AuthenticatedMastersAccountsRouteRoute,
  } as any)

const AuthenticatedMastersAccountsVouchercategoryIndexRoute =
  AuthenticatedMastersAccountsVouchercategoryIndexImport.update({
    id: '/voucher_category/',
    path: '/voucher_category/',
    getParentRoute: () => AuthenticatedMastersAccountsRouteRoute,
  } as any)

const AuthenticatedMastersAccountsAccountnatureIndexRoute =
  AuthenticatedMastersAccountsAccountnatureIndexImport.update({
    id: '/account_nature/',
    path: '/account_nature/',
    getParentRoute: () => AuthenticatedMastersAccountsRouteRoute,
  } as any)

const AuthenticatedMastersAccountsAccountledgerIndexRoute =
  AuthenticatedMastersAccountsAccountledgerIndexImport.update({
    id: '/account_ledger/',
    path: '/account_ledger/',
    getParentRoute: () => AuthenticatedMastersAccountsRouteRoute,
  } as any)

const AuthenticatedMastersAccountsAccountgroupIndexRoute =
  AuthenticatedMastersAccountsAccountgroupIndexImport.update({
    id: '/account_group/',
    path: '/account_group/',
    getParentRoute: () => AuthenticatedMastersAccountsRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteImport
      parentRoute: typeof AuthenticatedImport
    }
    '/(auth)/500': {
      id: '/(auth)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof auth500Import
      parentRoute: typeof rootRoute
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/charts': {
      id: '/_authenticated/charts'
      path: '/charts'
      fullPath: '/charts'
      preLoaderRoute: typeof AuthenticatedChartsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardImport
      parentRoute: typeof AuthenticatedImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in-2': {
      id: '/(auth)/sign-in-2'
      path: '/sign-in-2'
      fullPath: '/sign-in-2'
      preLoaderRoute: typeof authSignIn2LazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/signin': {
      id: '/(auth)/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof authSigninLazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503LazyImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/masters/accounts': {
      id: '/_authenticated/masters/accounts'
      path: '/masters/accounts'
      fullPath: '/masters/accounts'
      preLoaderRoute: typeof AuthenticatedMastersAccountsRouteImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/masters/inventory': {
      id: '/_authenticated/masters/inventory'
      path: '/masters/inventory'
      fullPath: '/masters/inventory'
      preLoaderRoute: typeof AuthenticatedMastersInventoryRouteImport
      parentRoute: typeof AuthenticatedImport
    }
    '/(demo)/demo/table': {
      id: '/(demo)/demo/table'
      path: '/demo/table'
      fullPath: '/demo/table'
      preLoaderRoute: typeof demoDemoTableImport
      parentRoute: typeof rootRoute
    }
    '/(demo)/demo/tanstack-query': {
      id: '/(demo)/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof demoDemoTanstackQueryImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/(auth)/profile': {
      id: '/_authenticated/(auth)/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedauthProfileImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/settings/account': {
      id: '/_authenticated/settings/account'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof AuthenticatedSettingsAccountImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/settings/appearance': {
      id: '/_authenticated/settings/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof AuthenticatedSettingsAppearanceImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/settings/display': {
      id: '/_authenticated/settings/display'
      path: '/display'
      fullPath: '/settings/display'
      preLoaderRoute: typeof AuthenticatedSettingsDisplayImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/settings/notifications': {
      id: '/_authenticated/settings/notifications'
      path: '/notifications'
      fullPath: '/settings/notifications'
      preLoaderRoute: typeof AuthenticatedSettingsNotificationsImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/apps/': {
      id: '/_authenticated/apps/'
      path: '/apps'
      fullPath: '/apps'
      preLoaderRoute: typeof AuthenticatedAppsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/chats/': {
      id: '/_authenticated/chats/'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof AuthenticatedChatsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/help-center/': {
      id: '/_authenticated/help-center/'
      path: '/help-center'
      fullPath: '/help-center'
      preLoaderRoute: typeof AuthenticatedHelpCenterIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AuthenticatedSettingsIndexImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/tasks/': {
      id: '/_authenticated/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof AuthenticatedTasksIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/users/': {
      id: '/_authenticated/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthenticatedUsersIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/masters/accounts/company': {
      id: '/_authenticated/masters/accounts/company'
      path: '/company'
      fullPath: '/masters/accounts/company'
      preLoaderRoute: typeof AuthenticatedMastersAccountsCompanyImport
      parentRoute: typeof AuthenticatedMastersAccountsRouteImport
    }
    '/_authenticated/reports/balance_sheet/': {
      id: '/_authenticated/reports/balance_sheet/'
      path: '/reports/balance_sheet'
      fullPath: '/reports/balance_sheet'
      preLoaderRoute: typeof AuthenticatedReportsBalancesheetIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/reports/profit_loss/': {
      id: '/_authenticated/reports/profit_loss/'
      path: '/reports/profit_loss'
      fullPath: '/reports/profit_loss'
      preLoaderRoute: typeof AuthenticatedReportsProfitlossIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/reports/stock_summary/': {
      id: '/_authenticated/reports/stock_summary/'
      path: '/reports/stock_summary'
      fullPath: '/reports/stock_summary'
      preLoaderRoute: typeof AuthenticatedReportsStocksummaryIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/transactions/day_book/': {
      id: '/_authenticated/transactions/day_book/'
      path: '/transactions/day_book'
      fullPath: '/transactions/day_book'
      preLoaderRoute: typeof AuthenticatedTransactionsDaybookIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/transactions/vouchers/': {
      id: '/_authenticated/transactions/vouchers/'
      path: '/transactions/vouchers'
      fullPath: '/transactions/vouchers'
      preLoaderRoute: typeof AuthenticatedTransactionsVouchersIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/masters/accounts/account_group/': {
      id: '/_authenticated/masters/accounts/account_group/'
      path: '/account_group'
      fullPath: '/masters/accounts/account_group'
      preLoaderRoute: typeof AuthenticatedMastersAccountsAccountgroupIndexImport
      parentRoute: typeof AuthenticatedMastersAccountsRouteImport
    }
    '/_authenticated/masters/accounts/account_ledger/': {
      id: '/_authenticated/masters/accounts/account_ledger/'
      path: '/account_ledger'
      fullPath: '/masters/accounts/account_ledger'
      preLoaderRoute: typeof AuthenticatedMastersAccountsAccountledgerIndexImport
      parentRoute: typeof AuthenticatedMastersAccountsRouteImport
    }
    '/_authenticated/masters/accounts/account_nature/': {
      id: '/_authenticated/masters/accounts/account_nature/'
      path: '/account_nature'
      fullPath: '/masters/accounts/account_nature'
      preLoaderRoute: typeof AuthenticatedMastersAccountsAccountnatureIndexImport
      parentRoute: typeof AuthenticatedMastersAccountsRouteImport
    }
    '/_authenticated/masters/accounts/voucher_category/': {
      id: '/_authenticated/masters/accounts/voucher_category/'
      path: '/voucher_category'
      fullPath: '/masters/accounts/voucher_category'
      preLoaderRoute: typeof AuthenticatedMastersAccountsVouchercategoryIndexImport
      parentRoute: typeof AuthenticatedMastersAccountsRouteImport
    }
    '/_authenticated/masters/accounts/voucher_classification/': {
      id: '/_authenticated/masters/accounts/voucher_classification/'
      path: '/voucher_classification'
      fullPath: '/masters/accounts/voucher_classification'
      preLoaderRoute: typeof AuthenticatedMastersAccountsVoucherclassificationIndexImport
      parentRoute: typeof AuthenticatedMastersAccountsRouteImport
    }
    '/_authenticated/masters/accounts/voucher_type/': {
      id: '/_authenticated/masters/accounts/voucher_type/'
      path: '/voucher_type'
      fullPath: '/masters/accounts/voucher_type'
      preLoaderRoute: typeof AuthenticatedMastersAccountsVouchertypeIndexImport
      parentRoute: typeof AuthenticatedMastersAccountsRouteImport
    }
    '/_authenticated/masters/inventory/godown/': {
      id: '/_authenticated/masters/inventory/godown/'
      path: '/godown'
      fullPath: '/masters/inventory/godown'
      preLoaderRoute: typeof AuthenticatedMastersInventoryGodownIndexImport
      parentRoute: typeof AuthenticatedMastersInventoryRouteImport
    }
    '/_authenticated/masters/inventory/stock_category/': {
      id: '/_authenticated/masters/inventory/stock_category/'
      path: '/stock_category'
      fullPath: '/masters/inventory/stock_category'
      preLoaderRoute: typeof AuthenticatedMastersInventoryStockcategoryIndexImport
      parentRoute: typeof AuthenticatedMastersInventoryRouteImport
    }
    '/_authenticated/masters/inventory/stock_group/': {
      id: '/_authenticated/masters/inventory/stock_group/'
      path: '/stock_group'
      fullPath: '/masters/inventory/stock_group'
      preLoaderRoute: typeof AuthenticatedMastersInventoryStockgroupIndexImport
      parentRoute: typeof AuthenticatedMastersInventoryRouteImport
    }
    '/_authenticated/masters/inventory/stock_item/': {
      id: '/_authenticated/masters/inventory/stock_item/'
      path: '/stock_item'
      fullPath: '/masters/inventory/stock_item'
      preLoaderRoute: typeof AuthenticatedMastersInventoryStockitemIndexImport
      parentRoute: typeof AuthenticatedMastersInventoryRouteImport
    }
    '/_authenticated/masters/inventory/stock_unit/': {
      id: '/_authenticated/masters/inventory/stock_unit/'
      path: '/stock_unit'
      fullPath: '/masters/inventory/stock_unit'
      preLoaderRoute: typeof AuthenticatedMastersInventoryStockunitIndexImport
      parentRoute: typeof AuthenticatedMastersInventoryRouteImport
    }
    '/_authenticated/masters/inventory/unique_quantity_code/': {
      id: '/_authenticated/masters/inventory/unique_quantity_code/'
      path: '/unique_quantity_code'
      fullPath: '/masters/inventory/unique_quantity_code'
      preLoaderRoute: typeof AuthenticatedMastersInventoryUniquequantitycodeIndexImport
      parentRoute: typeof AuthenticatedMastersInventoryRouteImport
    }
    '/_authenticated/masters/inventory/unit/': {
      id: '/_authenticated/masters/inventory/unit/'
      path: '/unit'
      fullPath: '/masters/inventory/unit'
      preLoaderRoute: typeof AuthenticatedMastersInventoryUnitIndexImport
      parentRoute: typeof AuthenticatedMastersInventoryRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedSettingsRouteRouteChildren {
  AuthenticatedSettingsAccountRoute: typeof AuthenticatedSettingsAccountRoute
  AuthenticatedSettingsAppearanceRoute: typeof AuthenticatedSettingsAppearanceRoute
  AuthenticatedSettingsDisplayRoute: typeof AuthenticatedSettingsDisplayRoute
  AuthenticatedSettingsNotificationsRoute: typeof AuthenticatedSettingsNotificationsRoute
  AuthenticatedSettingsIndexRoute: typeof AuthenticatedSettingsIndexRoute
}

const AuthenticatedSettingsRouteRouteChildren: AuthenticatedSettingsRouteRouteChildren =
  {
    AuthenticatedSettingsAccountRoute: AuthenticatedSettingsAccountRoute,
    AuthenticatedSettingsAppearanceRoute: AuthenticatedSettingsAppearanceRoute,
    AuthenticatedSettingsDisplayRoute: AuthenticatedSettingsDisplayRoute,
    AuthenticatedSettingsNotificationsRoute:
      AuthenticatedSettingsNotificationsRoute,
    AuthenticatedSettingsIndexRoute: AuthenticatedSettingsIndexRoute,
  }

const AuthenticatedSettingsRouteRouteWithChildren =
  AuthenticatedSettingsRouteRoute._addFileChildren(
    AuthenticatedSettingsRouteRouteChildren,
  )

interface AuthenticatedMastersAccountsRouteRouteChildren {
  AuthenticatedMastersAccountsCompanyRoute: typeof AuthenticatedMastersAccountsCompanyRoute
  AuthenticatedMastersAccountsAccountgroupIndexRoute: typeof AuthenticatedMastersAccountsAccountgroupIndexRoute
  AuthenticatedMastersAccountsAccountledgerIndexRoute: typeof AuthenticatedMastersAccountsAccountledgerIndexRoute
  AuthenticatedMastersAccountsAccountnatureIndexRoute: typeof AuthenticatedMastersAccountsAccountnatureIndexRoute
  AuthenticatedMastersAccountsVouchercategoryIndexRoute: typeof AuthenticatedMastersAccountsVouchercategoryIndexRoute
  AuthenticatedMastersAccountsVoucherclassificationIndexRoute: typeof AuthenticatedMastersAccountsVoucherclassificationIndexRoute
  AuthenticatedMastersAccountsVouchertypeIndexRoute: typeof AuthenticatedMastersAccountsVouchertypeIndexRoute
}

const AuthenticatedMastersAccountsRouteRouteChildren: AuthenticatedMastersAccountsRouteRouteChildren =
  {
    AuthenticatedMastersAccountsCompanyRoute:
      AuthenticatedMastersAccountsCompanyRoute,
    AuthenticatedMastersAccountsAccountgroupIndexRoute:
      AuthenticatedMastersAccountsAccountgroupIndexRoute,
    AuthenticatedMastersAccountsAccountledgerIndexRoute:
      AuthenticatedMastersAccountsAccountledgerIndexRoute,
    AuthenticatedMastersAccountsAccountnatureIndexRoute:
      AuthenticatedMastersAccountsAccountnatureIndexRoute,
    AuthenticatedMastersAccountsVouchercategoryIndexRoute:
      AuthenticatedMastersAccountsVouchercategoryIndexRoute,
    AuthenticatedMastersAccountsVoucherclassificationIndexRoute:
      AuthenticatedMastersAccountsVoucherclassificationIndexRoute,
    AuthenticatedMastersAccountsVouchertypeIndexRoute:
      AuthenticatedMastersAccountsVouchertypeIndexRoute,
  }

const AuthenticatedMastersAccountsRouteRouteWithChildren =
  AuthenticatedMastersAccountsRouteRoute._addFileChildren(
    AuthenticatedMastersAccountsRouteRouteChildren,
  )

interface AuthenticatedMastersInventoryRouteRouteChildren {
  AuthenticatedMastersInventoryGodownIndexRoute: typeof AuthenticatedMastersInventoryGodownIndexRoute
  AuthenticatedMastersInventoryStockcategoryIndexRoute: typeof AuthenticatedMastersInventoryStockcategoryIndexRoute
  AuthenticatedMastersInventoryStockgroupIndexRoute: typeof AuthenticatedMastersInventoryStockgroupIndexRoute
  AuthenticatedMastersInventoryStockitemIndexRoute: typeof AuthenticatedMastersInventoryStockitemIndexRoute
  AuthenticatedMastersInventoryStockunitIndexRoute: typeof AuthenticatedMastersInventoryStockunitIndexRoute
  AuthenticatedMastersInventoryUniquequantitycodeIndexRoute: typeof AuthenticatedMastersInventoryUniquequantitycodeIndexRoute
  AuthenticatedMastersInventoryUnitIndexRoute: typeof AuthenticatedMastersInventoryUnitIndexRoute
}

const AuthenticatedMastersInventoryRouteRouteChildren: AuthenticatedMastersInventoryRouteRouteChildren =
  {
    AuthenticatedMastersInventoryGodownIndexRoute:
      AuthenticatedMastersInventoryGodownIndexRoute,
    AuthenticatedMastersInventoryStockcategoryIndexRoute:
      AuthenticatedMastersInventoryStockcategoryIndexRoute,
    AuthenticatedMastersInventoryStockgroupIndexRoute:
      AuthenticatedMastersInventoryStockgroupIndexRoute,
    AuthenticatedMastersInventoryStockitemIndexRoute:
      AuthenticatedMastersInventoryStockitemIndexRoute,
    AuthenticatedMastersInventoryStockunitIndexRoute:
      AuthenticatedMastersInventoryStockunitIndexRoute,
    AuthenticatedMastersInventoryUniquequantitycodeIndexRoute:
      AuthenticatedMastersInventoryUniquequantitycodeIndexRoute,
    AuthenticatedMastersInventoryUnitIndexRoute:
      AuthenticatedMastersInventoryUnitIndexRoute,
  }

const AuthenticatedMastersInventoryRouteRouteWithChildren =
  AuthenticatedMastersInventoryRouteRoute._addFileChildren(
    AuthenticatedMastersInventoryRouteRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedSettingsRouteRoute: typeof AuthenticatedSettingsRouteRouteWithChildren
  AuthenticatedChartsRoute: typeof AuthenticatedChartsRoute
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRoute
  AuthenticatedMastersAccountsRouteRoute: typeof AuthenticatedMastersAccountsRouteRouteWithChildren
  AuthenticatedMastersInventoryRouteRoute: typeof AuthenticatedMastersInventoryRouteRouteWithChildren
  AuthenticatedauthProfileRoute: typeof AuthenticatedauthProfileRoute
  AuthenticatedAppsIndexRoute: typeof AuthenticatedAppsIndexRoute
  AuthenticatedChatsIndexRoute: typeof AuthenticatedChatsIndexRoute
  AuthenticatedHelpCenterIndexRoute: typeof AuthenticatedHelpCenterIndexRoute
  AuthenticatedTasksIndexRoute: typeof AuthenticatedTasksIndexRoute
  AuthenticatedUsersIndexRoute: typeof AuthenticatedUsersIndexRoute
  AuthenticatedReportsBalancesheetIndexRoute: typeof AuthenticatedReportsBalancesheetIndexRoute
  AuthenticatedReportsProfitlossIndexRoute: typeof AuthenticatedReportsProfitlossIndexRoute
  AuthenticatedReportsStocksummaryIndexRoute: typeof AuthenticatedReportsStocksummaryIndexRoute
  AuthenticatedTransactionsDaybookIndexRoute: typeof AuthenticatedTransactionsDaybookIndexRoute
  AuthenticatedTransactionsVouchersIndexRoute: typeof AuthenticatedTransactionsVouchersIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedSettingsRouteRoute: AuthenticatedSettingsRouteRouteWithChildren,
  AuthenticatedChartsRoute: AuthenticatedChartsRoute,
  AuthenticatedDashboardRoute: AuthenticatedDashboardRoute,
  AuthenticatedMastersAccountsRouteRoute:
    AuthenticatedMastersAccountsRouteRouteWithChildren,
  AuthenticatedMastersInventoryRouteRoute:
    AuthenticatedMastersInventoryRouteRouteWithChildren,
  AuthenticatedauthProfileRoute: AuthenticatedauthProfileRoute,
  AuthenticatedAppsIndexRoute: AuthenticatedAppsIndexRoute,
  AuthenticatedChatsIndexRoute: AuthenticatedChatsIndexRoute,
  AuthenticatedHelpCenterIndexRoute: AuthenticatedHelpCenterIndexRoute,
  AuthenticatedTasksIndexRoute: AuthenticatedTasksIndexRoute,
  AuthenticatedUsersIndexRoute: AuthenticatedUsersIndexRoute,
  AuthenticatedReportsBalancesheetIndexRoute:
    AuthenticatedReportsBalancesheetIndexRoute,
  AuthenticatedReportsProfitlossIndexRoute:
    AuthenticatedReportsProfitlossIndexRoute,
  AuthenticatedReportsStocksummaryIndexRoute:
    AuthenticatedReportsStocksummaryIndexRoute,
  AuthenticatedTransactionsDaybookIndexRoute:
    AuthenticatedTransactionsDaybookIndexRoute,
  AuthenticatedTransactionsVouchersIndexRoute:
    AuthenticatedTransactionsVouchersIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/500': typeof errors500LazyRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/charts': typeof AuthenticatedChartsRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/sign-in-2': typeof authSignIn2LazyRoute
  '/sign-up': typeof authSignUpLazyRoute
  '/signin': typeof authSigninLazyRoute
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/503': typeof errors503LazyRoute
  '/masters/accounts': typeof AuthenticatedMastersAccountsRouteRouteWithChildren
  '/masters/inventory': typeof AuthenticatedMastersInventoryRouteRouteWithChildren
  '/demo/table': typeof demoDemoTableRoute
  '/demo/tanstack-query': typeof demoDemoTanstackQueryRoute
  '/profile': typeof AuthenticatedauthProfileRoute
  '/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/apps': typeof AuthenticatedAppsIndexRoute
  '/chats': typeof AuthenticatedChatsIndexRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexRoute
  '/settings/': typeof AuthenticatedSettingsIndexRoute
  '/tasks': typeof AuthenticatedTasksIndexRoute
  '/users': typeof AuthenticatedUsersIndexRoute
  '/masters/accounts/company': typeof AuthenticatedMastersAccountsCompanyRoute
  '/reports/balance_sheet': typeof AuthenticatedReportsBalancesheetIndexRoute
  '/reports/profit_loss': typeof AuthenticatedReportsProfitlossIndexRoute
  '/reports/stock_summary': typeof AuthenticatedReportsStocksummaryIndexRoute
  '/transactions/day_book': typeof AuthenticatedTransactionsDaybookIndexRoute
  '/transactions/vouchers': typeof AuthenticatedTransactionsVouchersIndexRoute
  '/masters/accounts/account_group': typeof AuthenticatedMastersAccountsAccountgroupIndexRoute
  '/masters/accounts/account_ledger': typeof AuthenticatedMastersAccountsAccountledgerIndexRoute
  '/masters/accounts/account_nature': typeof AuthenticatedMastersAccountsAccountnatureIndexRoute
  '/masters/accounts/voucher_category': typeof AuthenticatedMastersAccountsVouchercategoryIndexRoute
  '/masters/accounts/voucher_classification': typeof AuthenticatedMastersAccountsVoucherclassificationIndexRoute
  '/masters/accounts/voucher_type': typeof AuthenticatedMastersAccountsVouchertypeIndexRoute
  '/masters/inventory/godown': typeof AuthenticatedMastersInventoryGodownIndexRoute
  '/masters/inventory/stock_category': typeof AuthenticatedMastersInventoryStockcategoryIndexRoute
  '/masters/inventory/stock_group': typeof AuthenticatedMastersInventoryStockgroupIndexRoute
  '/masters/inventory/stock_item': typeof AuthenticatedMastersInventoryStockitemIndexRoute
  '/masters/inventory/stock_unit': typeof AuthenticatedMastersInventoryStockunitIndexRoute
  '/masters/inventory/unique_quantity_code': typeof AuthenticatedMastersInventoryUniquequantitycodeIndexRoute
  '/masters/inventory/unit': typeof AuthenticatedMastersInventoryUnitIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/500': typeof errors500LazyRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/charts': typeof AuthenticatedChartsRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/sign-in-2': typeof authSignIn2LazyRoute
  '/sign-up': typeof authSignUpLazyRoute
  '/signin': typeof authSigninLazyRoute
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/503': typeof errors503LazyRoute
  '/masters/accounts': typeof AuthenticatedMastersAccountsRouteRouteWithChildren
  '/masters/inventory': typeof AuthenticatedMastersInventoryRouteRouteWithChildren
  '/demo/table': typeof demoDemoTableRoute
  '/demo/tanstack-query': typeof demoDemoTanstackQueryRoute
  '/profile': typeof AuthenticatedauthProfileRoute
  '/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/apps': typeof AuthenticatedAppsIndexRoute
  '/chats': typeof AuthenticatedChatsIndexRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexRoute
  '/settings': typeof AuthenticatedSettingsIndexRoute
  '/tasks': typeof AuthenticatedTasksIndexRoute
  '/users': typeof AuthenticatedUsersIndexRoute
  '/masters/accounts/company': typeof AuthenticatedMastersAccountsCompanyRoute
  '/reports/balance_sheet': typeof AuthenticatedReportsBalancesheetIndexRoute
  '/reports/profit_loss': typeof AuthenticatedReportsProfitlossIndexRoute
  '/reports/stock_summary': typeof AuthenticatedReportsStocksummaryIndexRoute
  '/transactions/day_book': typeof AuthenticatedTransactionsDaybookIndexRoute
  '/transactions/vouchers': typeof AuthenticatedTransactionsVouchersIndexRoute
  '/masters/accounts/account_group': typeof AuthenticatedMastersAccountsAccountgroupIndexRoute
  '/masters/accounts/account_ledger': typeof AuthenticatedMastersAccountsAccountledgerIndexRoute
  '/masters/accounts/account_nature': typeof AuthenticatedMastersAccountsAccountnatureIndexRoute
  '/masters/accounts/voucher_category': typeof AuthenticatedMastersAccountsVouchercategoryIndexRoute
  '/masters/accounts/voucher_classification': typeof AuthenticatedMastersAccountsVoucherclassificationIndexRoute
  '/masters/accounts/voucher_type': typeof AuthenticatedMastersAccountsVouchertypeIndexRoute
  '/masters/inventory/godown': typeof AuthenticatedMastersInventoryGodownIndexRoute
  '/masters/inventory/stock_category': typeof AuthenticatedMastersInventoryStockcategoryIndexRoute
  '/masters/inventory/stock_group': typeof AuthenticatedMastersInventoryStockgroupIndexRoute
  '/masters/inventory/stock_item': typeof AuthenticatedMastersInventoryStockitemIndexRoute
  '/masters/inventory/stock_unit': typeof AuthenticatedMastersInventoryStockunitIndexRoute
  '/masters/inventory/unique_quantity_code': typeof AuthenticatedMastersInventoryUniquequantitycodeIndexRoute
  '/masters/inventory/unit': typeof AuthenticatedMastersInventoryUnitIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/(auth)/500': typeof auth500Route
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/_authenticated/charts': typeof AuthenticatedChartsRoute
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRoute
  '/(auth)/forgot-password': typeof authForgotPasswordLazyRoute
  '/(auth)/sign-in-2': typeof authSignIn2LazyRoute
  '/(auth)/sign-up': typeof authSignUpLazyRoute
  '/(auth)/signin': typeof authSigninLazyRoute
  '/(errors)/401': typeof errors401LazyRoute
  '/(errors)/403': typeof errors403LazyRoute
  '/(errors)/404': typeof errors404LazyRoute
  '/(errors)/500': typeof errors500LazyRoute
  '/(errors)/503': typeof errors503LazyRoute
  '/_authenticated/masters/accounts': typeof AuthenticatedMastersAccountsRouteRouteWithChildren
  '/_authenticated/masters/inventory': typeof AuthenticatedMastersInventoryRouteRouteWithChildren
  '/(demo)/demo/table': typeof demoDemoTableRoute
  '/(demo)/demo/tanstack-query': typeof demoDemoTanstackQueryRoute
  '/_authenticated/(auth)/profile': typeof AuthenticatedauthProfileRoute
  '/_authenticated/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/_authenticated/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/_authenticated/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/_authenticated/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/_authenticated/apps/': typeof AuthenticatedAppsIndexRoute
  '/_authenticated/chats/': typeof AuthenticatedChatsIndexRoute
  '/_authenticated/help-center/': typeof AuthenticatedHelpCenterIndexRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexRoute
  '/_authenticated/tasks/': typeof AuthenticatedTasksIndexRoute
  '/_authenticated/users/': typeof AuthenticatedUsersIndexRoute
  '/_authenticated/masters/accounts/company': typeof AuthenticatedMastersAccountsCompanyRoute
  '/_authenticated/reports/balance_sheet/': typeof AuthenticatedReportsBalancesheetIndexRoute
  '/_authenticated/reports/profit_loss/': typeof AuthenticatedReportsProfitlossIndexRoute
  '/_authenticated/reports/stock_summary/': typeof AuthenticatedReportsStocksummaryIndexRoute
  '/_authenticated/transactions/day_book/': typeof AuthenticatedTransactionsDaybookIndexRoute
  '/_authenticated/transactions/vouchers/': typeof AuthenticatedTransactionsVouchersIndexRoute
  '/_authenticated/masters/accounts/account_group/': typeof AuthenticatedMastersAccountsAccountgroupIndexRoute
  '/_authenticated/masters/accounts/account_ledger/': typeof AuthenticatedMastersAccountsAccountledgerIndexRoute
  '/_authenticated/masters/accounts/account_nature/': typeof AuthenticatedMastersAccountsAccountnatureIndexRoute
  '/_authenticated/masters/accounts/voucher_category/': typeof AuthenticatedMastersAccountsVouchercategoryIndexRoute
  '/_authenticated/masters/accounts/voucher_classification/': typeof AuthenticatedMastersAccountsVoucherclassificationIndexRoute
  '/_authenticated/masters/accounts/voucher_type/': typeof AuthenticatedMastersAccountsVouchertypeIndexRoute
  '/_authenticated/masters/inventory/godown/': typeof AuthenticatedMastersInventoryGodownIndexRoute
  '/_authenticated/masters/inventory/stock_category/': typeof AuthenticatedMastersInventoryStockcategoryIndexRoute
  '/_authenticated/masters/inventory/stock_group/': typeof AuthenticatedMastersInventoryStockgroupIndexRoute
  '/_authenticated/masters/inventory/stock_item/': typeof AuthenticatedMastersInventoryStockitemIndexRoute
  '/_authenticated/masters/inventory/stock_unit/': typeof AuthenticatedMastersInventoryStockunitIndexRoute
  '/_authenticated/masters/inventory/unique_quantity_code/': typeof AuthenticatedMastersInventoryUniquequantitycodeIndexRoute
  '/_authenticated/masters/inventory/unit/': typeof AuthenticatedMastersInventoryUnitIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/settings'
    | '/500'
    | '/otp'
    | '/sign-in'
    | '/charts'
    | '/dashboard'
    | '/forgot-password'
    | '/sign-in-2'
    | '/sign-up'
    | '/signin'
    | '/401'
    | '/403'
    | '/404'
    | '/503'
    | '/masters/accounts'
    | '/masters/inventory'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/profile'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/apps'
    | '/chats'
    | '/help-center'
    | '/settings/'
    | '/tasks'
    | '/users'
    | '/masters/accounts/company'
    | '/reports/balance_sheet'
    | '/reports/profit_loss'
    | '/reports/stock_summary'
    | '/transactions/day_book'
    | '/transactions/vouchers'
    | '/masters/accounts/account_group'
    | '/masters/accounts/account_ledger'
    | '/masters/accounts/account_nature'
    | '/masters/accounts/voucher_category'
    | '/masters/accounts/voucher_classification'
    | '/masters/accounts/voucher_type'
    | '/masters/inventory/godown'
    | '/masters/inventory/stock_category'
    | '/masters/inventory/stock_group'
    | '/masters/inventory/stock_item'
    | '/masters/inventory/stock_unit'
    | '/masters/inventory/unique_quantity_code'
    | '/masters/inventory/unit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/500'
    | '/otp'
    | '/sign-in'
    | '/charts'
    | '/dashboard'
    | '/forgot-password'
    | '/sign-in-2'
    | '/sign-up'
    | '/signin'
    | '/401'
    | '/403'
    | '/404'
    | '/503'
    | '/masters/accounts'
    | '/masters/inventory'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/profile'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/apps'
    | '/chats'
    | '/help-center'
    | '/settings'
    | '/tasks'
    | '/users'
    | '/masters/accounts/company'
    | '/reports/balance_sheet'
    | '/reports/profit_loss'
    | '/reports/stock_summary'
    | '/transactions/day_book'
    | '/transactions/vouchers'
    | '/masters/accounts/account_group'
    | '/masters/accounts/account_ledger'
    | '/masters/accounts/account_nature'
    | '/masters/accounts/voucher_category'
    | '/masters/accounts/voucher_classification'
    | '/masters/accounts/voucher_type'
    | '/masters/inventory/godown'
    | '/masters/inventory/stock_category'
    | '/masters/inventory/stock_group'
    | '/masters/inventory/stock_item'
    | '/masters/inventory/stock_unit'
    | '/masters/inventory/unique_quantity_code'
    | '/masters/inventory/unit'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/_authenticated/settings'
    | '/(auth)/500'
    | '/(auth)/otp'
    | '/(auth)/sign-in'
    | '/_authenticated/charts'
    | '/_authenticated/dashboard'
    | '/(auth)/forgot-password'
    | '/(auth)/sign-in-2'
    | '/(auth)/sign-up'
    | '/(auth)/signin'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_authenticated/masters/accounts'
    | '/_authenticated/masters/inventory'
    | '/(demo)/demo/table'
    | '/(demo)/demo/tanstack-query'
    | '/_authenticated/(auth)/profile'
    | '/_authenticated/settings/account'
    | '/_authenticated/settings/appearance'
    | '/_authenticated/settings/display'
    | '/_authenticated/settings/notifications'
    | '/_authenticated/apps/'
    | '/_authenticated/chats/'
    | '/_authenticated/help-center/'
    | '/_authenticated/settings/'
    | '/_authenticated/tasks/'
    | '/_authenticated/users/'
    | '/_authenticated/masters/accounts/company'
    | '/_authenticated/reports/balance_sheet/'
    | '/_authenticated/reports/profit_loss/'
    | '/_authenticated/reports/stock_summary/'
    | '/_authenticated/transactions/day_book/'
    | '/_authenticated/transactions/vouchers/'
    | '/_authenticated/masters/accounts/account_group/'
    | '/_authenticated/masters/accounts/account_ledger/'
    | '/_authenticated/masters/accounts/account_nature/'
    | '/_authenticated/masters/accounts/voucher_category/'
    | '/_authenticated/masters/accounts/voucher_classification/'
    | '/_authenticated/masters/accounts/voucher_type/'
    | '/_authenticated/masters/inventory/godown/'
    | '/_authenticated/masters/inventory/stock_category/'
    | '/_authenticated/masters/inventory/stock_group/'
    | '/_authenticated/masters/inventory/stock_item/'
    | '/_authenticated/masters/inventory/stock_unit/'
    | '/_authenticated/masters/inventory/unique_quantity_code/'
    | '/_authenticated/masters/inventory/unit/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  auth500Route: typeof auth500Route
  authOtpRoute: typeof authOtpRoute
  authSignInRoute: typeof authSignInRoute
  authForgotPasswordLazyRoute: typeof authForgotPasswordLazyRoute
  authSignIn2LazyRoute: typeof authSignIn2LazyRoute
  authSignUpLazyRoute: typeof authSignUpLazyRoute
  authSigninLazyRoute: typeof authSigninLazyRoute
  errors401LazyRoute: typeof errors401LazyRoute
  errors403LazyRoute: typeof errors403LazyRoute
  errors404LazyRoute: typeof errors404LazyRoute
  errors500LazyRoute: typeof errors500LazyRoute
  errors503LazyRoute: typeof errors503LazyRoute
  demoDemoTableRoute: typeof demoDemoTableRoute
  demoDemoTanstackQueryRoute: typeof demoDemoTanstackQueryRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  auth500Route: auth500Route,
  authOtpRoute: authOtpRoute,
  authSignInRoute: authSignInRoute,
  authForgotPasswordLazyRoute: authForgotPasswordLazyRoute,
  authSignIn2LazyRoute: authSignIn2LazyRoute,
  authSignUpLazyRoute: authSignUpLazyRoute,
  authSigninLazyRoute: authSigninLazyRoute,
  errors401LazyRoute: errors401LazyRoute,
  errors403LazyRoute: errors403LazyRoute,
  errors404LazyRoute: errors404LazyRoute,
  errors500LazyRoute: errors500LazyRoute,
  errors503LazyRoute: errors503LazyRoute,
  demoDemoTableRoute: demoDemoTableRoute,
  demoDemoTanstackQueryRoute: demoDemoTanstackQueryRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/(auth)/500",
        "/(auth)/otp",
        "/(auth)/sign-in",
        "/(auth)/forgot-password",
        "/(auth)/sign-in-2",
        "/(auth)/sign-up",
        "/(auth)/signin",
        "/(errors)/401",
        "/(errors)/403",
        "/(errors)/404",
        "/(errors)/500",
        "/(errors)/503",
        "/(demo)/demo/table",
        "/(demo)/demo/tanstack-query"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/settings",
        "/_authenticated/charts",
        "/_authenticated/dashboard",
        "/_authenticated/masters/accounts",
        "/_authenticated/masters/inventory",
        "/_authenticated/(auth)/profile",
        "/_authenticated/apps/",
        "/_authenticated/chats/",
        "/_authenticated/help-center/",
        "/_authenticated/tasks/",
        "/_authenticated/users/",
        "/_authenticated/reports/balance_sheet/",
        "/_authenticated/reports/profit_loss/",
        "/_authenticated/reports/stock_summary/",
        "/_authenticated/transactions/day_book/",
        "/_authenticated/transactions/vouchers/"
      ]
    },
    "/_authenticated/settings": {
      "filePath": "_authenticated/settings/route.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/settings/account",
        "/_authenticated/settings/appearance",
        "/_authenticated/settings/display",
        "/_authenticated/settings/notifications",
        "/_authenticated/settings/"
      ]
    },
    "/(auth)/500": {
      "filePath": "(auth)/500.tsx"
    },
    "/(auth)/otp": {
      "filePath": "(auth)/otp.tsx"
    },
    "/(auth)/sign-in": {
      "filePath": "(auth)/sign-in.tsx"
    },
    "/_authenticated/charts": {
      "filePath": "_authenticated/charts.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/dashboard": {
      "filePath": "_authenticated/dashboard.tsx",
      "parent": "/_authenticated"
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.lazy.tsx"
    },
    "/(auth)/sign-in-2": {
      "filePath": "(auth)/sign-in-2.lazy.tsx"
    },
    "/(auth)/sign-up": {
      "filePath": "(auth)/sign-up.lazy.tsx"
    },
    "/(auth)/signin": {
      "filePath": "(auth)/signin.lazy.tsx"
    },
    "/(errors)/401": {
      "filePath": "(errors)/401.lazy.tsx"
    },
    "/(errors)/403": {
      "filePath": "(errors)/403.lazy.tsx"
    },
    "/(errors)/404": {
      "filePath": "(errors)/404.lazy.tsx"
    },
    "/(errors)/500": {
      "filePath": "(errors)/500.lazy.tsx"
    },
    "/(errors)/503": {
      "filePath": "(errors)/503.lazy.tsx"
    },
    "/_authenticated/masters/accounts": {
      "filePath": "_authenticated/masters/accounts/route.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/masters/accounts/company",
        "/_authenticated/masters/accounts/account_group/",
        "/_authenticated/masters/accounts/account_ledger/",
        "/_authenticated/masters/accounts/account_nature/",
        "/_authenticated/masters/accounts/voucher_category/",
        "/_authenticated/masters/accounts/voucher_classification/",
        "/_authenticated/masters/accounts/voucher_type/"
      ]
    },
    "/_authenticated/masters/inventory": {
      "filePath": "_authenticated/masters/inventory/route.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/masters/inventory/godown/",
        "/_authenticated/masters/inventory/stock_category/",
        "/_authenticated/masters/inventory/stock_group/",
        "/_authenticated/masters/inventory/stock_item/",
        "/_authenticated/masters/inventory/stock_unit/",
        "/_authenticated/masters/inventory/unique_quantity_code/",
        "/_authenticated/masters/inventory/unit/"
      ]
    },
    "/(demo)/demo/table": {
      "filePath": "(demo)/demo.table.tsx"
    },
    "/(demo)/demo/tanstack-query": {
      "filePath": "(demo)/demo.tanstack-query.tsx"
    },
    "/_authenticated/(auth)/profile": {
      "filePath": "_authenticated/(auth)/profile.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/account": {
      "filePath": "_authenticated/settings/account.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/appearance": {
      "filePath": "_authenticated/settings/appearance.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/display": {
      "filePath": "_authenticated/settings/display.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/notifications": {
      "filePath": "_authenticated/settings/notifications.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/apps/": {
      "filePath": "_authenticated/apps/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/chats/": {
      "filePath": "_authenticated/chats/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/help-center/": {
      "filePath": "_authenticated/help-center/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/": {
      "filePath": "_authenticated/settings/index.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/tasks/": {
      "filePath": "_authenticated/tasks/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/users/": {
      "filePath": "_authenticated/users/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/masters/accounts/company": {
      "filePath": "_authenticated/masters/accounts/company.tsx",
      "parent": "/_authenticated/masters/accounts"
    },
    "/_authenticated/reports/balance_sheet/": {
      "filePath": "_authenticated/reports/balance_sheet/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/reports/profit_loss/": {
      "filePath": "_authenticated/reports/profit_loss/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/reports/stock_summary/": {
      "filePath": "_authenticated/reports/stock_summary/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/transactions/day_book/": {
      "filePath": "_authenticated/transactions/day_book/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/transactions/vouchers/": {
      "filePath": "_authenticated/transactions/vouchers/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/masters/accounts/account_group/": {
      "filePath": "_authenticated/masters/accounts/account_group/index.tsx",
      "parent": "/_authenticated/masters/accounts"
    },
    "/_authenticated/masters/accounts/account_ledger/": {
      "filePath": "_authenticated/masters/accounts/account_ledger/index.tsx",
      "parent": "/_authenticated/masters/accounts"
    },
    "/_authenticated/masters/accounts/account_nature/": {
      "filePath": "_authenticated/masters/accounts/account_nature/index.tsx",
      "parent": "/_authenticated/masters/accounts"
    },
    "/_authenticated/masters/accounts/voucher_category/": {
      "filePath": "_authenticated/masters/accounts/voucher_category/index.tsx",
      "parent": "/_authenticated/masters/accounts"
    },
    "/_authenticated/masters/accounts/voucher_classification/": {
      "filePath": "_authenticated/masters/accounts/voucher_classification/index.tsx",
      "parent": "/_authenticated/masters/accounts"
    },
    "/_authenticated/masters/accounts/voucher_type/": {
      "filePath": "_authenticated/masters/accounts/voucher_type/index.tsx",
      "parent": "/_authenticated/masters/accounts"
    },
    "/_authenticated/masters/inventory/godown/": {
      "filePath": "_authenticated/masters/inventory/godown/index.tsx",
      "parent": "/_authenticated/masters/inventory"
    },
    "/_authenticated/masters/inventory/stock_category/": {
      "filePath": "_authenticated/masters/inventory/stock_category/index.tsx",
      "parent": "/_authenticated/masters/inventory"
    },
    "/_authenticated/masters/inventory/stock_group/": {
      "filePath": "_authenticated/masters/inventory/stock_group/index.tsx",
      "parent": "/_authenticated/masters/inventory"
    },
    "/_authenticated/masters/inventory/stock_item/": {
      "filePath": "_authenticated/masters/inventory/stock_item/index.tsx",
      "parent": "/_authenticated/masters/inventory"
    },
    "/_authenticated/masters/inventory/stock_unit/": {
      "filePath": "_authenticated/masters/inventory/stock_unit/index.tsx",
      "parent": "/_authenticated/masters/inventory"
    },
    "/_authenticated/masters/inventory/unique_quantity_code/": {
      "filePath": "_authenticated/masters/inventory/unique_quantity_code/index.tsx",
      "parent": "/_authenticated/masters/inventory"
    },
    "/_authenticated/masters/inventory/unit/": {
      "filePath": "_authenticated/masters/inventory/unit/index.tsx",
      "parent": "/_authenticated/masters/inventory"
    }
  }
}
ROUTE_MANIFEST_END */
